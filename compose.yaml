services:
  backend:
    container_name: backend
    build: 
      context: .
      dockerfile: apps/docker/backend/Dockerfile
    ports:
      - "127.0.0.1:8000:8000"
    env_file:
      - ./environment/.env
    environment:
      DJANGO_SUPERUSER_USERNAME_FILE: /run/secrets/django_pass
      POSTGRES_PASSWORD_FILE: /run/secrets/psql_pass
    secrets:
      - django_pass
      - psql_pass
    healthcheck:
      test: ["CMD", "curl", "--silent", "--output", "/dev/null", "http://backend:8000"]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 15s
    depends_on:
      db:
        condition: service_healthy
        #restart: true


  db:
    container_name: db
    image: postgres:15-alpine
    ports:
      - "127.0.0.1:5432:5432"
    env_file:
      - ./environment/.env
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/psql_pass
    secrets:
      - psql_pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"] #["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 15s
    volumes:
      - db-data:/var/lib/postgresql/data


  frontend:
    container_name: frontend
    build: 
      context: .
      dockerfile: apps/docker/frontend/Dockerfile
    ports:
      - "127.0.0.1:3000:3000"
    healthcheck:
      test: ["CMD", "curl", "--silent", "--output", "/dev/null", "http://frontend:3000"] #"http://localhost:3000"
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 15s
    volumes:
      - node_modules:/apps/frontend/node_modules


  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: apps/docker/nginx/Dockerfile
    ports:
      - "127.0.0.1:8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--silent", "--output", "/dev/null", "http://nginx:8080"] #"http://localhost:8080"
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 15s
    depends_on:
      backend:
        condition: service_healthy #service_started
      frontend:
        condition: service_healthy


volumes:
  db-data:
  node_modules:


secrets:
  django_pass:
    file: ./environment/django_pass
  psql_pass:
    file: ./environment/psql_pass
